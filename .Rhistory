x <- as.table(matrix(data[(offset+1):(offset+20)], nrow=2, byrow=TRUE));
pvalue(chisq_test(x, scores=list("Var2" = c(1,2,3,4,5,6,7,8,9,10))))
}
ress2 = matrix(-1, length(movieIds), 5);
counter = 1;
for (i in movieIds) {
ress2[i,] = c(i, chiTest(res2[i,], 1), chiTest(res2[i,], 21), chiTest(res2[i,], 41), chiTest(res2[i,], 61));
counter = counter + 1
if (counter %% 100 == 0) {
print(counter)
}
}
res2
ress2
ress2[ress2[,1] == -1]
movieIds
res2
res2 = subset(res2, res2[,1] != -1)
res2
write.csv(res2, "output/preprocessedData1-20000.csv");
ress2 = matrix(-1, length(movieIds), 5);
counter = 1;
for (i in (1:nrow(res2))) {
print(i)
# ress2[counter,] = c(counter, chiTest(res2[counter,], 1), chiTest(res2[counter,], 21), chiTest(res2[counter,], 41), chiTest(res2[counter,], 61));
# counter = counter + 1
if (counter %% 100 == 0) {
print(counter)
}
}
ress2 = matrix(-1, length(movieIds), 5);
for (i in (1:nrow(res2))) {
ress2[i,] = c(res2[i,1], chiTest(res2[i,], 1), chiTest(res2[i,], 21), chiTest(res2[i,], 41), chiTest(res2[i,], 61));
if (i %% 100 == 0) {
print(i)
}
}
subset(ress2, ress2[,2] > 0.05)
subset(ress2, ress2[,3] < 0.05)
subset(ress2, ress2[,4] < 0.05)
subset(ress2, ress2[,5] < 0.05)
subset(ress2, median(c(ress2[,5], ress2[,4], ress2[,3])) < 0.05)
subset(ress2, median(c(ress2[,5], ress2[,4])) < 0.05)
subset(ress2, median(c(ress2[,5])) < 0.05)
subset(ress2, c(ress2[,5]) < 0.05)
subset(ress2, ress2[,5] < 0.05 & ress2[,4] < 0.05)
ress2 <- subset(ress2, ress2[,1] != -1)
ress2
subset(ress2, ress2[,5] < 0.05 & ress2[,4] < 0.05)
subset(ress2, ress2[,6] < 0.05 & ress2[,4] < 0.05)
subset(ress2, ress2[,3] < 0.05 & ress2[,4] < 0.05)
subset(ress2, ress2[,3] < 0.05 & ress2[,5] < 0.05)
median(c(1,2,3))
subset(ress2, (ress2[,3] < 0.05 & ress2[,5] < 0.05) | (ress2[,4] < 0.05 & ress2[,5] < 0.05) | (ress2[,3] < 0.05 & ress2[,4] < 0.05))
subset(ress2, c(ress2[,2]) < 0.05)
subset(ress2, c(ress2[,2]) > 0.05)
subset(ress2, c(ress2[,2]) >= 0.05)
subset(ress2, c(ress2[,2]) < 0.05)
subset(ress2, c(ress2[,2]) >= 0.05)
temp = subset(data, data[,1] == 682)
temp
res2
subset(ress2, c(ress2[,2]) >= 0.05)
temp = subset(data, data[,1] == 679)
temp
temp2 <- preprocess_movie_data(temp)
temp2
chiTest(temp2, 0)
chiTest(temp2, 20)
chiTest(temp2, 40)
chiTest(temp2, 60)
temp3 <- as.table(matrix(temp2[1:20], nrow=2, byrow=TRUE))
PT <- pairwiseOrdinalIndependence(temp3, compare="row")
cldList(p.value ~ Comparison,
data      = PT,
threshold = 0.05)
subset(ress2, c(ress2[,2]) < 0.05)
temp = subset(data, data[,1] == 282)
temp2 <- preprocess_movie_data(temp)
temp3 <- as.table(matrix(temp2[1:20], nrow=2, byrow=TRUE))
PT <- pairwiseOrdinalIndependence(temp3, compare="row")
cldList(p.value ~ Comparison,
data      = PT,
threshold = 0.05)
chisq_test(temp3,scores=list("Var2" = c(1,2,3,4,5,6,7,8,9,10)))
prop.table(temp3, margin=1)
ress2
subset(ress2, ress2[,6] < 0.05)
subset(ress2, ress2[,5] < 0.05)
subset(ress2, ress2[,4] < 0.05)
subset(ress2, ress2[,3] < 0.05)
subset(ress2, ress2[,2] < 0.05)
write.csv(ress2, "output/chiTest1-20000.csv")
View(data)
rating_scale = c(0.5, 1.0, 1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0);
sum_ratings <- function(data) {
result_sum_ratings = c();
for (i in rating_scale) {
result_sum_ratings[i * 2] = length(data[data == i]);
}
result_sum_ratings
}
preprocess_movie_data_for_sample <- function(data) {
c(sum_ratings(data[1:(length(data) / 2)]), sum_ratings(data[(length(data) / 2 + 1): length(data)]))
}
preprocess_movie_data <- function(data) {
random_indices = sample(1:nrow(data), nrow(data) / 2);
preprocess_sample_1 <- c(data[random_indices,2], data[-random_indices,2]);
random_indices = sample(1:nrow(data), nrow(data) / 2);
preprocess_sample_2 <- c(data[random_indices,2], data[-random_indices,2]);
random_indices = sample(1:nrow(data), nrow(data) / 2);
preprocess_sample_3 <- c(data[random_indices,2], data[-random_indices,2]);
c(preprocess_movie_data_for_sample(data[,2]), preprocess_movie_data_for_sample(preprocess_sample_1), preprocess_movie_data_for_sample(preprocess_sample_2), preprocess_movie_data_for_sample(preprocess_sample_3))
}
chiTest <- function(data, offset) {
x <- as.table(matrix(data[(offset+1):(offset+20)], nrow=2, byrow=TRUE));
pvalue(chisq_test(x, scores=list("Var2" = c(1,2,3,4,5,6,7,8,9,10))))
}
data = read.table("output/ratings_sorted20000-40000__.csv", header=TRUE, sep=",")
res2 = matrix(-1,length(movieIds),81);
counter = 1;
for (i in movieIds) {
temp = subset(data,data['movieId'] == i)
if (nrow(temp) < 50) {
next
}
res2[counter,] = c(i, preprocess_movie_data(temp));
counter = counter + 1
if (counter %% 100 == 0) {
print(counter)
}
}
res2
movieIds = unique(data[,1])
res2 = matrix(-1,length(movieIds),81);
counter = 1;
for (i in movieIds) {
temp = subset(data,data['movieId'] == i)
if (nrow(temp) < 50) {
next
}
res2[counter,] = c(i, preprocess_movie_data(temp));
counter = counter + 1
if (counter %% 100 == 0) {
print(counter)
}
}
res2 = subset(res2, res2[,1] != -1)
res2
ress2 = matrix(-1, length(movieIds), 5);
for (i in (1:nrow(res2))) {
ress2[i,] = c(res2[i,1], chiTest(res2[i,], 1), chiTest(res2[i,], 21), chiTest(res2[i,], 41), chiTest(res2[i,], 61));
if (i %% 100 == 0) {
print(i)
}
}
ress2 = subset(ress2, ress2[,1] != -1)
library(coin)
library(survival)
library(coin)
ress2 = matrix(-1, length(movieIds), 5);
for (i in (1:nrow(res2))) {
ress2[i,] = c(res2[i,1], chiTest(res2[i,], 1), chiTest(res2[i,], 21), chiTest(res2[i,], 41), chiTest(res2[i,], 61));
if (i %% 100 == 0) {
print(i)
}
}
ress2 = subset(ress2, ress2[,1] != -1)
ress2
subset(ress2, (ress2[,3] < 0.05 & ress2[,5] < 0.05) | (ress2[,4] < 0.05 & ress2[,5] < 0.05) | (ress2[,3] < 0.05 & ress2[,4] < 0.05))
subset(ress2, ress[,2] < 0.05)
subset(ress2, ress2[,2] < 0.05)
data = read.table("output/ratings_sorted20000-40000__.csv", header=TRUE, sep=",")
movieIds = unique(data[,1])
res=matrix(-1,length(movieIds),8);
counter = 1;
for (i in movieIds) {
temp = subset(data,data['movieId'] == i)
if (nrow(temp) < 50) {
next
}
res[counter,] = c(i, nrow(temp), check_time_dependency(temp)$p.value, check_random_dependency(temp))
counter = counter + 1
if (counter %% 100 == 0) {
print(counter)
}
}
res2 = matrix(-1,length(movieIds),81);
counter = 1;
for (i in movieIds) {
temp = subset(data,data['movieId'] == i)
if (nrow(temp) < 50) {
next
}
res2[counter,] = c(i, preprocess_movie_data(temp));
counter = counter + 1
if (counter %% 100 == 0) {
print(counter)
}
}
res2 = subset(res2, res2[,1] != -1)
library(survival)
library(coin)
ress2 = matrix(-1, length(movieIds), 5);
for (i in (1:nrow(res2))) {
ress2[i,] = c(res2[i,1], chiTest(res2[i,], 1), chiTest(res2[i,], 21), chiTest(res2[i,], 41), chiTest(res2[i,], 61));
if (i %% 100 == 0) {
print(i)
}
}
ress2 = subset(ress2, ress2[,1] != -1)
ress2
subset(ress2, ress2[,2] < 0.05)
subset(ress2, (ress2[,3] < 0.05 & ress2[,5] < 0.05) | (ress2[,4] < 0.05 & ress2[,5] < 0.05) | (ress2[,3] < 0.05 & ress2[,4] < 0.05))
data = read.table("output/ratings_sorted0-20000__.csv", header=TRUE, sep=",")
movieIds = unique(data[,1])
res2 = matrix(-1,length(movieIds),81);
counter = 1;
for (i in movieIds) {
temp = subset(data,data['movieId'] == i)
if (nrow(temp) < 50) {
next
}
res2[counter,] = c(i, preprocess_movie_data(temp));
counter = counter + 1
if (counter %% 100 == 0) {
print(counter)
}
}
res2 = subset(res2, res2[,1] != -1)
library(survival)
library(coin)
ress2 = matrix(-1, length(movieIds), 5);
for (i in (1:nrow(res2))) {
ress2[i,] = c(res2[i,1], chiTest(res2[i,], 1), chiTest(res2[i,], 21), chiTest(res2[i,], 41), chiTest(res2[i,], 61));
if (i %% 100 == 0) {
print(i)
}
}
ress2 = subset(ress2, ress2[,1] != -1)
subset(ress2, ress2[,2] < 0.05)
ress2
tempIds = unique(ress2[,1])
tempIds
tempIds = unique(subset(ress2, ress2[,2] < 0.05)[,1])
tempIds
for (i in tempIds) {
print(sum(res2[i,2:21]))
}
for (i in tempIds) {
y = subset(res2, res2[,1] == i);
print(sum(y[1,2:21]))
}
teet = "asd";
teet + "ss";
teet + "ss"
teet."ss"
teet"ss"
merge(teet, "ss")
concat(teet, "aaa");
concatenate(teet, "aaa");
paste(teet, "aaa")
paste(teet, "aaa", sep = NULL])
paste(teet, "aaa", sep = NULL)
paste(teet, "aaa", sep = "")
paste(teet, 1, sep = "")
i = paste("", 100000,sep="")
i
i = format(100000, scientific = FALSE)
k
i
i = 5
namePrefix = "output/ratings_sorted";
outputFilename = paste(namePrefix,
format(((i-1) * 20000), scientific=FALSE),
"-", format((i*20000), scientific=FALSE),
"__output.csv",
sep="");
outputFilename
inputFilename = paste(namePrefix,
format(((i-1) * 20000), scientific=FALSE),
"-",
format(i*20000, scientific=FALSE),
"__.csv",
sep="");
inputFilename
gather_results <- function() {
res = matrix(-1, 0, 81)
for (i in (1:11)) {
namePrefix = "output/ratings_sorted";
inputFilename = paste(namePrefix,
format(((i-1) * 20000), scientific=FALSE),
"-",
format(i*20000, scientific=FALSE),
"__output.csv",
sep="");
small_res = read.table(inputFileName, header=TRUE, sep=",");
res = rbind(res, small_res);
}
res
}
res <- gather_results()
gather_results <- function() {
res = matrix(-1, 0, 81)
for (i in (1:11)) {
namePrefix = "output/ratings_sorted";
inputFilename = paste(namePrefix,
format(((i-1) * 20000), scientific=FALSE),
"-",
format(i*20000, scientific=FALSE),
"__output.csv",
sep="");
small_res = read.table(inputFilename, header=TRUE, sep=",");
res = rbind(res, small_res);
}
res
}
res <- gather_results()
res
gather_results <- function() {
res = matrix(-1, 0, 5)
for (i in (1:11)) {
namePrefix = "output/ratings_sorted";
inputFilename = paste(namePrefix,
format(((i-1) * 20000), scientific=FALSE),
"-",
format(i*20000, scientific=FALSE),
"__output.csv",
sep="");
small_res = read.table(inputFilename, header=TRUE, sep=",");
res = rbind(res, small_res[2:6,]);
}
res
}
res <- gather_results()
res
gather_results <- function() {
res = matrix(-1, 0, 5)
for (i in (1:11)) {
namePrefix = "output/ratings_sorted";
inputFilename = paste(namePrefix,
format(((i-1) * 20000), scientific=FALSE),
"-",
format(i*20000, scientific=FALSE),
"__output.csv",
sep="");
small_res = read.table(inputFilename, header=TRUE, sep=",");
res = rbind(res, small_res[,2:6]);
}
res
}
res <- gather_results()
res
subset(res, res[,2] < 0.05)
nrow(subset(res, res[,2] < 0.05))
nrow(subset(res, res[,3] < 0.05))
nrow(subset(res, res[,4] < 0.05))
nrow(subset(res, res[,5] < 0.05))
nrow(subset(res, res[,6] < 0.05))
nrow(subset(res, res[,2] < 0.06))
nrow(subset(res, res[,2] < 0.07))
nrow(subset(res, res[,2] < 0.05))
subset(res, res[,2] < 0.05)
subset(res, res[,2] < 0.05)[1:10,]
tail(subset(res, res[,2] < 0.05))
tail(res)
res2 = subset(res, res[,2] < 0.05)
subset(res2, res2[,3] < 0.05)
nrow(subset(res2, res2[,3] < 0.05))
nrow(subset(res2, res2[,4] < 0.05))
nrow(subset(res2, res2[,5] < 0.05))
nrow(res2)
subset(res2, (res2[,3] < 0.05 & res2[,5] < 0.05) | (res2[,4] < 0.05 & res2[,5] < 0.05) | (res2[,3] < 0.05 & res2[,4] < 0.05))
res2
subset(res, (res[,3] < 0.05 & res[,5] < 0.05) | (res[,4] < 0.05 & res[,5] < 0.05) | (res[,3] < 0.05 & res[,4] < 0.05))
nrow(subset(res, (res[,3] < 0.05 & res[,5] < 0.05) | (res[,4] < 0.05 & res[,5] < 0.05) | (res[,3] < 0.05 & res[,4] < 0.05)))
res
res2
head(res2)
run_tests <- function() {
for (i in (2:2)) {
namePrefix = "output/ratings_sorted";
inputFilename = paste(namePrefix,
format(((i-1) * 20000), scientific=FALSE),
"-",
format(i*20000, scientific=FALSE),
"__.csv",
sep="");
outputFilename = paste(namePrefix,
format(((i-1) * 20000), scientific=FALSE),
"-",
format((i*20000), scientific=FALSE),
"__output.csv",
sep="");
preprocessed_data <- preprocess_file_data(inputFilename);
tested_data <- test_data(preprocessed_data);
write.csv(preprocessed_data, "output/temp/ratings_sorted20000-40000__preprocessed.csv");
# write.csv(tested_data, outputFilename)
}
}
run_tests()
run_tests <- function() {
for (i in (2:2)) {
namePrefix = "output/ratings_sorted";
inputFilename = paste(namePrefix,
format(((i-1) * 20000), scientific=FALSE),
"-",
format(i*20000, scientific=FALSE),
"__.csv",
sep="");
outputFilename = paste(namePrefix,
format(((i-1) * 20000), scientific=FALSE),
"-",
format((i*20000), scientific=FALSE),
"__output.csv",
sep="");
preprocessed_data <- preprocess_file_data(inputFilename);
# tested_data <- test_data(preprocessed_data);
write.csv(preprocessed_data, "output/temp/ratings_sorted20000-40000__preprocessed.csv");
# write.csv(tested_data, outputFilename)
}
}
run_tests()
rating_scale = c(0.5, 1.0, 1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0);
sum_ratings <- function(data) {
result_sum_ratings = c();
for (i in rating_scale) {
result_sum_ratings[i * 2] = length(data[data == i]);
}
result_sum_ratings
}
preprocess_movie_data_for_sample <- function(data) {
c(sum_ratings(data[1:(length(data) / 2)]),
sum_ratings(data[(length(data) / 2 + 1): length(data)]))
}
preprocess_movie_data <- function(data) {
random_indices = sample(1:nrow(data), nrow(data) / 2);
preprocess_sample_1 <- c(data[random_indices,2], data[-random_indices,2]);
random_indices = sample(1:nrow(data), nrow(data) / 2);
preprocess_sample_2 <- c(data[random_indices,2], data[-random_indices,2]);
random_indices = sample(1:nrow(data), nrow(data) / 2);
preprocess_sample_3 <- c(data[random_indices,2], data[-random_indices,2]);
c(preprocess_movie_data_for_sample(data[,2]),
preprocess_movie_data_for_sample(preprocess_sample_1),
preprocess_movie_data_for_sample(preprocess_sample_2),
preprocess_movie_data_for_sample(preprocess_sample_3))
}
preprocess_file_data <- function(fileName) {
data = read.table(fileName, header=TRUE, sep=",");
movieIds = unique(data[,1]);
res = matrix(-1,length(movieIds),81);
counter = 1;
for (i in movieIds) {
temp = subset(data,data['movieId'] == i)
if (nrow(temp) < 50) {
next
}
res[counter,] = c(i, preprocess_movie_data(temp));
counter = counter + 1;
}
res = subset(res, res[,1] != -1);
res
}
chiTest <- function(data, offset) {
x <- as.table(matrix(data[(offset+1):(offset+20)], nrow=2, byrow=TRUE));
pvalue(chisq_test(x, scores=list("Var2" = c(1,2,3,4,5,6,7,8,9,10))))
}
library(survival)
library(coin)
test_data <- function(data) {
movieIds = unique(data[,1]);
test_results = matrix(-1, length(movieIds), 5);
for (i in (1:nrow(data))) {
test_results[i,] = c(data[i,1],
chiTest(data[i,], 1),
chiTest(data[i,], 21),
chiTest(data[i,], 41),
chiTest(data[i,], 61));
}
test_results = subset(test_results, test_results[,1] != -1)
}
run_tests <- function() {
for (i in (2:2)) {
namePrefix = "output/ratings_sorted";
inputFilename = paste(namePrefix,
format(((i-1) * 20000), scientific=FALSE),
"-",
format(i*20000, scientific=FALSE),
"__.csv",
sep="");
outputFilename = paste(namePrefix,
format(((i-1) * 20000), scientific=FALSE),
"-",
format((i*20000), scientific=FALSE),
"__output.csv",
sep="");
preprocessed_data <- preprocess_file_data(inputFilename);
# tested_data <- test_data(preprocessed_data);
write.csv(preprocessed_data, "output/temp/ratings_sorted20000-40000__preprocessed.csv");
# write.csv(tested_data, outputFilename)
}
}
run_tests()
head(res2)
res2
subset(res2, res2[,1] > 20000)
head(subset(res2, res2[,1] > 20000))
res
names(res) <- list("movieId", "pvalue (ordered sample)", "pvalue (random sample1)", "pvalue (random sample2)", "pvalue (random sample3)")
res
write.csv(res, "output/ChiTestMovieLens.csv")
write.csv(res, "output/ChiTestMovieLens.csv", row.names=FALSE)
