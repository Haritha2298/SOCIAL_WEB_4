vector(,10)
vector(numeric(0),10)
numeric(0)
numeric(0,1)
matrix(0,1,10)
c(vec, 1:10)
c(1, 1:10)
c(1:10)
c(1:10, 0)
rep(0, 10)
x <- rep(0, 10)
x[x == 1]
x[x == 0]
x = c()
x
x = c(x, 1)
x
rating_scale = c(0.5, 1.0, 1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0)
sum_ratings <- function(data) {
result_sum_ratings = c()
for (i in rating_scale) {
result_sum_ratings[i] = length(data[data == i])
}
result_sum_ratings
}
rating_scale = c(0.5, 1.0, 1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0);
sum_ratings <- function(data) {
result_sum_ratings = c();
for (i in rating_scale) {
result_sum_ratings[i] = length(data[data == i]);
}
result_sum_ratings
}
preprocess_movie_data <- function(data) {
c(sum_ratings(data[1:(nrow(data) / 2),2]), sum_ratings(data[(nrow(data) / 2 + 1): nrow(data),2]));
}
preprocess_movie_data <- function(data) {
c(sum_ratings(data[1:(nrow(data) / 2),2]), sum_ratings(data[(nrow(data) / 2 + 1): nrow(data),2]))
}
preprocess_movie_data(teeemp)
sum_ratings(teeemp[,2])
rating_scale
teeemp[,2]
scccc = teeemp[,2]
scccc[scccc = 0.5]
scccc[scccc == 0.5]
length(scccc[scccc == 0.5])
rating_scale = c(0.5, 1.0, 1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0);
sum_ratings <- function(data) {
result_sum_ratings = c();
for (i in rating_scale) {
result_sum_ratings[i * 2] = length(data[data == i]);
}
result_sum_ratings
}
sum_ratings(teeemp[,2])
preprocess_movie_data <- function(data) {
c(sum_ratings(data[1:(nrow(data) / 2),2]), sum_ratings(data[(nrow(data) / 2 + 1): nrow(data),2]))
}
preprocess_movie_data(teeeemp)
preprocess_movie_data(teeemp)
preprocess_movie_data_for_sample <- function(data) {
c(sum_ratings(data[1:(nrow(data) / 2),2]), sum_ratings(data[(nrow(data) / 2 + 1): nrow(data),2]))
}
preprocess_movie_data <- function(data) {
preprocess_sample_1 <- random_indices = sample(1:nrow(data), nrow(data) / 2);
preprocess_sample_2 <- random_indices = sample(1:nrow(data), nrow(data) / 2);
preprocess_sample_3 <- random_indices = sample(1:nrow(data), nrow(data) / 2);
c(preprocess_movie_data_for_sample(data), preprocess_movie_data_for_sample(preprocess_sample_1), preprocess_movie_data_for_sample(preprocess_sample_2), preprocess_movie_data_for_sample(preprocess_sample_3))
}
preprocess_movie_data(teeemp)
random_indices = sample(1:nrow(teeemp), nrow(teeemp) / 2);
random_indices
teeemp[random_indices,2]
preprocess_movie_data_for_sample <- function(data) {
c(sum_ratings(data[1:(length(data) / 2)]), sum_ratings(data[(length(data) / 2 + 1): nrow(data)]))
}
preprocess_movie_data <- function(data) {
random_indices = sample(1:nrow(data), nrow(data) / 2);
preprocess_sample_1 <- c(data[random_indices,2], data[-random_indices,2]);
random_indices = sample(1:nrow(data), nrow(data) / 2);
preprocess_sample_2 <- c(data[random_indices,2], data[-random_indices,2]);
random_indices = sample(1:nrow(data), nrow(data) / 2);
preprocess_sample_3 <- c(data[random_indices,2], data[-random_indices,2]);
c(preprocess_movie_data_for_sample(data[,2]), preprocess_movie_data_for_sample(preprocess_sample_1), preprocess_movie_data_for_sample(preprocess_sample_2), preprocess_movie_data_for_sample(preprocess_sample_3))
}
}
sdasd
asdasdasdasdasd
}}}}
;
;;;;;;
preprocess_movie_data_for_sample <- function(data) {
c(sum_ratings(data[1:(length(data) / 2)]), sum_ratings(data[(length(data) / 2 + 1): length(data)]))
}
preprocess_movie_data <- function(data) {
random_indices = sample(1:nrow(data), nrow(data) / 2);
preprocess_sample_1 <- c(data[random_indices,2], data[-random_indices,2]);
random_indices = sample(1:nrow(data), nrow(data) / 2);
preprocess_sample_2 <- c(data[random_indices,2], data[-random_indices,2]);
random_indices = sample(1:nrow(data), nrow(data) / 2);
preprocess_sample_3 <- c(data[random_indices,2], data[-random_indices,2]);
c(preprocess_movie_data_for_sample(data[,2]), preprocess_movie_data_for_sample(preprocess_sample_1), preprocess_movie_data_for_sample(preprocess_sample_2), preprocess_movie_data_for_sample(preprocess_sample_3))
}
preprocess_movie_data(teeemp)
x <- preprocess_movie_data(teeemp)
x[1:10]
sum(x[1:10])
sum(x[11:20])
for (i in (1:8)) {}
for (i in (1:8)) {
print(sum(x[((i-1)*10):(10*i)]))
}
for (i in (1:8)) {
print(sum(x[((i-1)*10+1):(10*i)]))
}
check_time_dependency(teeemp)
r(1,2)
row(1,2)
c(c(2),c(3))
c(2;3)
[c(1),c(2)]
x <- [c(1),c(2)]
x <- [c(1);c(2)]
x <- [c(1,2 ),c(2,3)]
c(1,2 ),c(2,3)
r(c(1,2 ),c(2,3))
?c
?as.table
as.table(c(1,2,3,4))
as.table(c(1,2,3,4), c(2,2))
as.table(c(1,2,3,4), dim=c(2,2))
check_time_dependency(teeemp)
x <- preprocess_movie_data(teeemp)
y <- matrix(x, nrow=2)
y
y <- matrix(x[1:20], nrow=2)
y
preprocess_movie_data(teeemp)
?matrix
y <- matrix(x[1:20], nrow=2,byrow=TRUE)
y
chisq_test(y)
y
y <- as.table(y)
y
chisq_test(y)
check_time_dependency(teeemp)
pairwiseOrdinalIndependence(y, compare="row")
library(rcompanion)
install.packages("rcompanion")
library(rcompanion)
pairwiseOrdinalIndependence(y, compare="row")
cldList(p.value ~ Comparison, data = pairwiseOrdinalIndependence(y, compare="row"), treshold = 0.05)
y
preprocess_movie_data(teeemp)
chisq_test(y)
y
chisq_test(y, scores=c(1,2,3,4,5,6,7,8,9,10))
chisq_test(y, scores=list(c(1,2,3,4,5,6,7,8,9,10)))
chisq_test(y)
chisq_test(y, scores=list("Var2" = c(1,2,3,4,5,6,7,8,9,10)))
chisq_test(y)
Input =(
"Breakfast  Never  Rarely  Sometimes Often  Always
Travel
Walk         6      9       6         5      2
Bus          2      5       8         5      3
Drive        2      4       6         8      8
")
Tabla = as.table(read.ftable(textConnection(Input)))
Tabla
chisq_test(Tabla)
res2 = matrix(-1,length(movieIds),81);
counter = 1;
for (i in moviesIds) {
temp = subset(data,data['movieId'] == i)
if (nrow(temp) < 50) {
next
}
res2[counter,] = c(i, preprocess_movie_data(temp));
counter = counter + 1
if (counter %% 100 == 0) {
print(counter)
}
}
movieIds = unique(data[,1])
res2 = matrix(-1,length(movieIds),81);
counter = 1;
for (i in moviesIds) {
temp = subset(data,data['movieId'] == i)
if (nrow(temp) < 50) {
next
}
res2[counter,] = c(i, preprocess_movie_data(temp));
counter = counter + 1
if (counter %% 100 == 0) {
print(counter)
}
}
counter = 1;
for (i in movieIds) {
temp = subset(data,data['movieId'] == i)
if (nrow(temp) < 50) {
next
}
res2[counter,] = c(i, preprocess_movie_data(temp));
counter = counter + 1
if (counter %% 100 == 0) {
print(counter)
}
}
write.csv(res2, "output/preprocessedData1-20000.csv");
y
chiTest <- function(data, offset) {
x <- as.table(matrix(data[(offset+1):(offset+20)], nrow, byrow=TRUE));
chisq_test(x, scores=list("Var2" = c(1,2,3,4,5,6,7,8,9,10)))$p_value
}
chiTest(res2[1,],1)
chiTest <- function(data, offset) {
x <- as.table(matrix(data[(offset+1):(offset+20)], nrow=2, byrow=TRUE));
chisq_test(x, scores=list("Var2" = c(1,2,3,4,5,6,7,8,9,10)))$p_value
}
chiTest(res2[1,],1)
chiTest <- function(data, offset) {
x <- as.table(matrix(data[(offset+1):(offset+20)], nrow=2, byrow=TRUE));
chisq_test(x, scores=list("Var2" = c(1,2,3,4,5,6,7,8,9,10)))$p.value
}
chiTest(res2[1,],1)
chiTest <- function(data, offset) {
x <- as.table(matrix(data[(offset+1):(offset+20)], nrow=2, byrow=TRUE));
chisq_test(x, scores=list("Var2" = c(1,2,3,4,5,6,7,8,9,10)))
}
chiTest(res2[1,],1)
res[1,]
chiTest <- function(data, offset) {
x <- as.table(matrix(data[(offset+1):(offset+20)], nrow=2, byrow=TRUE));
chisq_test(x, scores=list("Var2" = c(2,3,4,5,6,7,8,9,10,11)))
}
chiTest(res2[1,],1)
y <- chiTest(res2[1,],1)
y
View(y)
View(y)
View(y)
y[1]
y[1,]
y[,1]
pvalue(y)
ress2 = matrix(-1, length(movieIds), 5);
counter = 1;
for (i in movieIds) {
ress2[i,] = c(i, chiTest(res2[i,], 1), chiTest(res2[i,], 21), chiTest(res2[i,], 41), chiTest(res2[i,], 61));
counter = counter + 1
if (counter %% 100 == 0) {
print(counter)
}
}
chiTest <- function(data, offset) {
x <- as.table(matrix(data[(offset+1):(offset+20)], nrow=2, byrow=TRUE));
pvalue(chisq_test(x, scores=list("Var2" = c(1,2,3,4,5,6,7,8,9,10))))
}
ress2 = matrix(-1, length(movieIds), 5);
counter = 1;
for (i in movieIds) {
ress2[i,] = c(i, chiTest(res2[i,], 1), chiTest(res2[i,], 21), chiTest(res2[i,], 41), chiTest(res2[i,], 61));
counter = counter + 1
if (counter %% 100 == 0) {
print(counter)
}
}
res2
ress2
ress2[ress2[,1] == -1]
movieIds
res2
res2 = subset(res2, res2[,1] != -1)
res2
write.csv(res2, "output/preprocessedData1-20000.csv");
ress2 = matrix(-1, length(movieIds), 5);
counter = 1;
for (i in (1:nrow(res2))) {
print(i)
# ress2[counter,] = c(counter, chiTest(res2[counter,], 1), chiTest(res2[counter,], 21), chiTest(res2[counter,], 41), chiTest(res2[counter,], 61));
# counter = counter + 1
if (counter %% 100 == 0) {
print(counter)
}
}
ress2 = matrix(-1, length(movieIds), 5);
for (i in (1:nrow(res2))) {
ress2[i,] = c(res2[i,1], chiTest(res2[i,], 1), chiTest(res2[i,], 21), chiTest(res2[i,], 41), chiTest(res2[i,], 61));
if (i %% 100 == 0) {
print(i)
}
}
subset(ress2, ress2[,2] > 0.05)
subset(ress2, ress2[,3] < 0.05)
subset(ress2, ress2[,4] < 0.05)
subset(ress2, ress2[,5] < 0.05)
subset(ress2, median(c(ress2[,5], ress2[,4], ress2[,3])) < 0.05)
subset(ress2, median(c(ress2[,5], ress2[,4])) < 0.05)
subset(ress2, median(c(ress2[,5])) < 0.05)
subset(ress2, c(ress2[,5]) < 0.05)
subset(ress2, ress2[,5] < 0.05 & ress2[,4] < 0.05)
ress2 <- subset(ress2, ress2[,1] != -1)
ress2
subset(ress2, ress2[,5] < 0.05 & ress2[,4] < 0.05)
subset(ress2, ress2[,6] < 0.05 & ress2[,4] < 0.05)
subset(ress2, ress2[,3] < 0.05 & ress2[,4] < 0.05)
subset(ress2, ress2[,3] < 0.05 & ress2[,5] < 0.05)
median(c(1,2,3))
subset(ress2, (ress2[,3] < 0.05 & ress2[,5] < 0.05) | (ress2[,4] < 0.05 & ress2[,5] < 0.05) | (ress2[,3] < 0.05 & ress2[,4] < 0.05))
subset(ress2, c(ress2[,2]) < 0.05)
subset(ress2, c(ress2[,2]) > 0.05)
subset(ress2, c(ress2[,2]) >= 0.05)
subset(ress2, c(ress2[,2]) < 0.05)
subset(ress2, c(ress2[,2]) >= 0.05)
temp = subset(data, data[,1] == 682)
temp
res2
subset(ress2, c(ress2[,2]) >= 0.05)
temp = subset(data, data[,1] == 679)
temp
temp2 <- preprocess_movie_data(temp)
temp2
chiTest(temp2, 0)
chiTest(temp2, 20)
chiTest(temp2, 40)
chiTest(temp2, 60)
temp3 <- as.table(matrix(temp2[1:20], nrow=2, byrow=TRUE))
PT <- pairwiseOrdinalIndependence(temp3, compare="row")
cldList(p.value ~ Comparison,
data      = PT,
threshold = 0.05)
subset(ress2, c(ress2[,2]) < 0.05)
temp = subset(data, data[,1] == 282)
temp2 <- preprocess_movie_data(temp)
temp3 <- as.table(matrix(temp2[1:20], nrow=2, byrow=TRUE))
PT <- pairwiseOrdinalIndependence(temp3, compare="row")
cldList(p.value ~ Comparison,
data      = PT,
threshold = 0.05)
chisq_test(temp3,scores=list("Var2" = c(1,2,3,4,5,6,7,8,9,10)))
prop.table(temp3, margin=1)
ress2
subset(ress2, ress2[,6] < 0.05)
subset(ress2, ress2[,5] < 0.05)
subset(ress2, ress2[,4] < 0.05)
subset(ress2, ress2[,3] < 0.05)
subset(ress2, ress2[,2] < 0.05)
write.csv(ress2, "output/chiTest1-20000.csv")
View(data)
rating_scale = c(0.5, 1.0, 1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0);
sum_ratings <- function(data) {
result_sum_ratings = c();
for (i in rating_scale) {
result_sum_ratings[i * 2] = length(data[data == i]);
}
result_sum_ratings
}
preprocess_movie_data_for_sample <- function(data) {
c(sum_ratings(data[1:(length(data) / 2)]), sum_ratings(data[(length(data) / 2 + 1): length(data)]))
}
preprocess_movie_data <- function(data) {
random_indices = sample(1:nrow(data), nrow(data) / 2);
preprocess_sample_1 <- c(data[random_indices,2], data[-random_indices,2]);
random_indices = sample(1:nrow(data), nrow(data) / 2);
preprocess_sample_2 <- c(data[random_indices,2], data[-random_indices,2]);
random_indices = sample(1:nrow(data), nrow(data) / 2);
preprocess_sample_3 <- c(data[random_indices,2], data[-random_indices,2]);
c(preprocess_movie_data_for_sample(data[,2]), preprocess_movie_data_for_sample(preprocess_sample_1), preprocess_movie_data_for_sample(preprocess_sample_2), preprocess_movie_data_for_sample(preprocess_sample_3))
}
chiTest <- function(data, offset) {
x <- as.table(matrix(data[(offset+1):(offset+20)], nrow=2, byrow=TRUE));
pvalue(chisq_test(x, scores=list("Var2" = c(1,2,3,4,5,6,7,8,9,10))))
}
data = read.table("output/ratings_sorted20000-40000__.csv", header=TRUE, sep=",")
res2 = matrix(-1,length(movieIds),81);
counter = 1;
for (i in movieIds) {
temp = subset(data,data['movieId'] == i)
if (nrow(temp) < 50) {
next
}
res2[counter,] = c(i, preprocess_movie_data(temp));
counter = counter + 1
if (counter %% 100 == 0) {
print(counter)
}
}
res2
movieIds = unique(data[,1])
res2 = matrix(-1,length(movieIds),81);
counter = 1;
for (i in movieIds) {
temp = subset(data,data['movieId'] == i)
if (nrow(temp) < 50) {
next
}
res2[counter,] = c(i, preprocess_movie_data(temp));
counter = counter + 1
if (counter %% 100 == 0) {
print(counter)
}
}
res2 = subset(res2, res2[,1] != -1)
res2
ress2 = matrix(-1, length(movieIds), 5);
for (i in (1:nrow(res2))) {
ress2[i,] = c(res2[i,1], chiTest(res2[i,], 1), chiTest(res2[i,], 21), chiTest(res2[i,], 41), chiTest(res2[i,], 61));
if (i %% 100 == 0) {
print(i)
}
}
ress2 = subset(ress2, ress2[,1] != -1)
library(coin)
library(survival)
library(coin)
ress2 = matrix(-1, length(movieIds), 5);
for (i in (1:nrow(res2))) {
ress2[i,] = c(res2[i,1], chiTest(res2[i,], 1), chiTest(res2[i,], 21), chiTest(res2[i,], 41), chiTest(res2[i,], 61));
if (i %% 100 == 0) {
print(i)
}
}
ress2 = subset(ress2, ress2[,1] != -1)
ress2
subset(ress2, (ress2[,3] < 0.05 & ress2[,5] < 0.05) | (ress2[,4] < 0.05 & ress2[,5] < 0.05) | (ress2[,3] < 0.05 & ress2[,4] < 0.05))
subset(ress2, ress[,2] < 0.05)
subset(ress2, ress2[,2] < 0.05)
data = read.table("output/ratings_sorted20000-40000__.csv", header=TRUE, sep=",")
movieIds = unique(data[,1])
res=matrix(-1,length(movieIds),8);
counter = 1;
for (i in movieIds) {
temp = subset(data,data['movieId'] == i)
if (nrow(temp) < 50) {
next
}
res[counter,] = c(i, nrow(temp), check_time_dependency(temp)$p.value, check_random_dependency(temp))
counter = counter + 1
if (counter %% 100 == 0) {
print(counter)
}
}
res2 = matrix(-1,length(movieIds),81);
counter = 1;
for (i in movieIds) {
temp = subset(data,data['movieId'] == i)
if (nrow(temp) < 50) {
next
}
res2[counter,] = c(i, preprocess_movie_data(temp));
counter = counter + 1
if (counter %% 100 == 0) {
print(counter)
}
}
res2 = subset(res2, res2[,1] != -1)
library(survival)
library(coin)
ress2 = matrix(-1, length(movieIds), 5);
for (i in (1:nrow(res2))) {
ress2[i,] = c(res2[i,1], chiTest(res2[i,], 1), chiTest(res2[i,], 21), chiTest(res2[i,], 41), chiTest(res2[i,], 61));
if (i %% 100 == 0) {
print(i)
}
}
ress2 = subset(ress2, ress2[,1] != -1)
ress2
subset(ress2, ress2[,2] < 0.05)
subset(ress2, (ress2[,3] < 0.05 & ress2[,5] < 0.05) | (ress2[,4] < 0.05 & ress2[,5] < 0.05) | (ress2[,3] < 0.05 & ress2[,4] < 0.05))
data = read.table("output/ratings_sorted0-20000__.csv", header=TRUE, sep=",")
movieIds = unique(data[,1])
res2 = matrix(-1,length(movieIds),81);
counter = 1;
for (i in movieIds) {
temp = subset(data,data['movieId'] == i)
if (nrow(temp) < 50) {
next
}
res2[counter,] = c(i, preprocess_movie_data(temp));
counter = counter + 1
if (counter %% 100 == 0) {
print(counter)
}
}
res2 = subset(res2, res2[,1] != -1)
library(survival)
library(coin)
ress2 = matrix(-1, length(movieIds), 5);
for (i in (1:nrow(res2))) {
ress2[i,] = c(res2[i,1], chiTest(res2[i,], 1), chiTest(res2[i,], 21), chiTest(res2[i,], 41), chiTest(res2[i,], 61));
if (i %% 100 == 0) {
print(i)
}
}
ress2 = subset(ress2, ress2[,1] != -1)
subset(ress2, ress2[,2] < 0.05)
ress2
tempIds = unique(ress2[,1])
tempIds
tempIds = unique(subset(ress2, ress2[,2] < 0.05)[,1])
tempIds
for (i in tempIds) {
print(sum(res2[i,2:21]))
}
for (i in tempIds) {
y = subset(res2, res2[,1] == i);
print(sum(y[1,2:21]))
}
